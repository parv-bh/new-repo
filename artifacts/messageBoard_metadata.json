{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "msgId",
						"type": "uint256"
					}
				],
				"name": "msgCreated",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "givenEther",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "reqdEther",
						"type": "uint256"
					},
					{
						"internalType": "address payable",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "depositBy",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getMessages",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "content",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "owner",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "timeCreated",
								"type": "uint256"
							}
						],
						"internalType": "struct messageBoard.Message[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_content",
						"type": "string"
					}
				],
				"name": "postMessage",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_price",
						"type": "uint256"
					}
				],
				"name": "setMsgPrice",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "The name of the author",
			"details": "Explain to a developer any extra details",
			"kind": "dev",
			"methods": {},
			"title": "untitled",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"notice": "Explain to an end user what this does",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"untitled.sol": "messageBoard"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/math/SafeMath.sol": {
			"keccak256": "0xf64a28941d25250961c39bafffb245ae62e903abee89f607a7b9ea7e2460bec2",
			"urls": [
				"bzz-raw://3dc598b11889c9ed87d726de0158a0f3d24f3df0bb7f438a86a6835c1fcff516",
				"dweb:/ipfs/QmaWWRi31c13VQw84RqLfBj2jHfF3tf8GjpcKN9WGe6vzj"
			]
		},
		"untitled.sol": {
			"keccak256": "0xc591e534b10637289ea47c06d9c54e99f1e796f6690d390bac0fb567b7a82124",
			"license": "MIT",
			"urls": [
				"bzz-raw://b4aa4270a0a3dad9c7bdcc7a994ea499111e12f1334cfd73b5765daa49633d39",
				"dweb:/ipfs/QmXUF1a6bv7mdWjHWq1Xe2jfX5zD1CmKieAbys6T6bx9RD"
			]
		}
	},
	"version": 1
}